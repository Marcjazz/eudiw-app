const fetchBaseHref=async()=>{const a="assets/manifest.json",t=await caches.open("v2");let e=await t.match(a);e||(await t.add(a),e=await t.match(a));const s=await(e?.json()),n=s?.start_url;return n},addResourcesToCache=async a=>{const t=await caches.open("v2");await t.addAll(a)},putInCache=async(a,t)=>{const e=await caches.open("v2");(a.url.startsWith("http")||a.url.startsWith("https"))&&await e.put(a,t)},cacheFirst=async a=>{const t=await caches.match(a);if(t)return t;try{const t=await fetch(a);return putInCache(a,t.clone()),t}catch(e){const a=await caches.match(await fetchBaseHref());return a||new Response("Network error happened",{status:408,headers:{"Content-Type":"text/plain"}})}},enableNavigationPreload=async()=>{self.registration.navigationPreload&&await self.registration.navigationPreload.enable()};self.addEventListener("activate",(a=>{a.waitUntil(enableNavigationPreload())})),self.addEventListener("install",(a=>{a.waitUntil((async()=>{addResourcesToCache([await fetchBaseHref()])}))})),self.addEventListener("fetch",(a=>{a.respondWith(cacheFirst(a.request))}));